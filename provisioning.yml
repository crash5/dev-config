# vim: set ts=2
---
- name: Dev provisioning and setup
  hosts: all
  module_defaults:
    ansible.builtin.apt:
      state: latest
      install_recommends: no

  vars:
    generate_password: "{{ lookup('password', '/dev/null chars=ascii_lowercase,digits length=5') }}"
    default_user_name: crash

  pre_tasks:
    - name: Update apt cache if needed
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600


  tasks:
    - name: Dist upgrade if available
      ansible.builtin.apt:
        upgrade: dist

    - name: Install gnupg, required by add-ppa
      ansible.builtin.apt:
        name:
          - gnupg

    - name: Add git-core ppa
      ansible.builtin.apt_repository:
        repo: ppa:git-core/ppa
        state: present

    - name: Add neovim/stable ppa
      ansible.builtin.apt_repository:
        repo: ppa:neovim-ppa/stable
        state: present

    - name: Install basic packages
      ansible.builtin.apt:
        name:
          - tmux
          - neovim
          - git
          - wget
          - curl
          - htop
          - man
          - bash-completion
          - sudo
          # - strace
          # - watch

    - name: Install gocryptfs and fuse for directory encryption
      ansible.builtin.apt:
        name:
          - gocryptfs
          - fuse

    - name: Remove unused packages and leftovers
      ansible.builtin.apt:
        state: absent
        purge: yes
        autoremove: yes
        name:
          - nano
          - sendmail


    # Config
    - name: Set hostname
      ansible.builtin.hostname:
        name: midkemia

    - name: Ensure en_US.UTF-8 locale exists
      community.general.locale_gen:
        name: en_US.UTF-8
        state: present

    - name: Set default locale to en_US.UTF-8
      command: localectl set-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8

    - name: Set timezone to Europe/Budapest
      community.general.timezone:
        name: Europe/Budapest

    - name: Ensure custom user groups exists
      ansible.builtin.group:
        name: "{{ item }}"
        state: present
      loop:
        - allow_ssh
        - sftp_only

    # Create default user
    - name: Generate default user password
      set_fact:
        default_user_password: "{{ generate_password }}"

    - name: Ensure default user exists
      ansible.builtin.user:
        state: present
        name: "{{ default_user_name }}"
        shell: /bin/bash
        update_password: on_create
        password: "{{ default_user_password | password_hash('sha512') }}"
        append: yes  # don't remove user from other groups
        groups:
          - allow_ssh
          - sudo
      register: ensure_user

    - name: Setup default user
      when: ensure_user.changed
      block:
        - name: Print password for default user
          debug:
            msg: "Generated password: {{ default_user_password }}"
        - name: Force default user password change on first login
          command: chage -d 0 {{ default_user_name }}
        - name: Set authorized_keys for default user
          ansible.posix.authorized_key:
            state: present
            user: "{{ default_user_name }}"
            key: "{{ lookup('file', 'files/' ~ default_user_name ~ '.authorized_key') }}"
            comment: "from provisioning"

    - name: Copy sshd config
      ansible.builtin.copy:
        src: files/sshd_config
        dest: /etc/ssh/sshd_config
        mode: '0600'
        validate: 'sshd -t -f %s'
      notify: Restart ssh


  handlers:
    - name: Restart ssh
      ansible.builtin.service:
        name: ssh
        state: restarted


# TODO: regenerate sshd keys?
# TODO: copy nftables template/user firewalld?
